pipeline {
  agent any

  environment {
    SONAR_URL = "http://192.168.10.135:9000"
    APP_DIR = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
  }

  stages {

    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Devansh210/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Maven Build') {
      steps {
        dir("$APP_DIR") {
          sh 'mvn clean install'
        }
      }
    }

    stage('SonarQube Scan') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir("$APP_DIR") {
            sh '''
              mvn sonar:sonar \
                -Dsonar.projectKey=spring-boot-app \
                -Dsonar.projectName=spring-boot-app \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=$SONAR_URL
            '''
          }
        }
      }
    }

    stage('Credential Scan - TruffleHog') {
      steps {
        dir("$APP_DIR") {
          sh '''
            mkdir -p ../../reports

            /usr/local/bin/trufflehog filesystem . --json > ../../reports/trufflehog-report.json || true

            if grep -q "reason" ../../reports/trufflehog-report.json; then
              echo "❌ Secrets detected by TruffleHog!"
              exit 1
            else
              echo "✅ No secrets detected."
            fi
          '''
        }
      }
    }
  }

  post {
    success {
      echo "✅ Pipeline completed successfully."
    }
    failure {
      echo "❌ Pipeline failed. Please check logs."
    }
    always {
      archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
      archiveArtifacts artifacts: 'reports/trufflehog-report.json', allowEmptyArchive: true
    }
  }
}

