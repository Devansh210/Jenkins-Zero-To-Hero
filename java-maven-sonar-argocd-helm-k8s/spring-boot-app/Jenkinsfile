pipeline {
  agent {
    docker {
      image 'maven:3.8.7-eclipse-temurin-17'
      args '-v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://192.168.10.135:9000"
    APP_DIR = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
  }

  stages {

    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Devansh210/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Maven Build') {
      steps {
        dir("$APP_DIR") {
          sh 'mvn clean install'
        }
      }
    }

    stage('SonarQube Scan') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir("$APP_DIR") {
            sh '''
              mvn sonar:sonar \
                -Dsonar.projectKey=spring-boot-app \
                -Dsonar.projectName=spring-boot-app \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=$SONAR_URL
            '''
          }
        }
      }
    }

    stage('Credential Scan - TruffleHog') {
      steps {
        sh '''
          mkdir -p reports
          docker run --rm -v $(pwd):/src trufflesecurity/trufflehog \
            filesystem /src --json > reports/trufflehog-report.json || true

          if grep -q "reason" reports/trufflehog-report.json; then
            echo "❌ Secrets detected by TruffleHog!"
            exit 1
          else
            echo "✅ No secrets detected."
          fi
        '''
      }
    }
