pipeline {
  agent any

 
  environment {
    SONAR_URL = "http://192.168.10.135:9000"
  }

  stages {
   stage('Maven Build') {
  steps {
    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
      sh '''
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
        export PATH=$JAVA_HOME/bin:$PATH
        mvn clean install
      '''
    }
  }
}


    stage('Static Code Analysis - SonarQube') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn clean verify sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }

    stage('Check Secrets - TruffleHog') {
      steps {
        sh 'mkdir -p scanresults'

        // Run TruffleHog scan and save output
        sh 'docker run --rm gesellix/trufflehog --json https://github.com/Devansh210/Jenkins-Zero-To-Hero.git > scanresults/trufflehog.json'

        script {
          def jsonReport = readFile('scanresults/trufflehog.json')

          def htmlReport = """
            <html>
            <head>
              <title>Trufflehog Scan Report</title>
            </head>
            <body>
              <h1>Trufflehog Scan Report</h1>
              <pre>${jsonReport}</pre>
            </body>
            </html>
          """

          writeFile file: 'scanresults/trufflehog-report.html', text: htmlReport

          // Optional: log if secrets were found
          if (jsonReport.contains('"PrintDiff"')) {
            echo '❗ Secrets detected in repository!'
          } else {
            echo '✅ No secrets detected.'
          }
        }

        archiveArtifacts artifacts: 'scanresults/trufflehog-report.html', allowEmptyArchive: true
      }
    }
  }

  post {
    always {
      echo 'Pipeline execution finished.'
    }
    failure {
      echo '❌ Build failed. Check logs and scan reports.'
    }
    success {
      echo '✅ Build succeeded.'
    }
  }
}
