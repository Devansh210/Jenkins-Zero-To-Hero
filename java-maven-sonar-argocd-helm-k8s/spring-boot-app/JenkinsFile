pipeline {
  agent {    docker {
        image 'maven:3.8.7-eclipse-temurin-17'
        args '-v /var/run/docker.sock:/var/run/docker.sock'
    }
}
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/Devansh210/Jenkins-Zero-To-Hero.git'
      }
    }
    
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.10.135:9000"
      }
       steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
stage('Credential Scanner - TruffleHog') {
  agent {
    docker {
      image 'python:3.11'  // Ensures shell and pip available
      args '-u root'       // Ensures no permission issues
    }
  }
  steps {
    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
      sh '''
        pip install --no-cache-dir trufflehog
        mkdir -p trufflehog-reports
        trufflehog filesystem . --json > trufflehog-reports/trufflehog-report.json || true

        if grep -q "reason" trufflehog-reports/trufflehog-report.json; then
          echo "❌ Secrets detected by TruffleHog!"
          exit 1
        else
          echo "✅ No secrets detected."
        fi
      '''
    }
    archiveArtifacts artifacts: '**/trufflehog-reports/trufflehog-report.json', allowEmptyArchive: true
  }
}


  } // closes 'stages'
}   // closes 'pipeline'
