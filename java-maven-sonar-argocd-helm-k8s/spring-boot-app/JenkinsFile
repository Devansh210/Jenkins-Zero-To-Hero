pipeline {
   agent any
    
    tools{
        jdk 'jdk17'
        maven 'maven3'
    }

  environment {
    SONAR_URL = "http://192.168.10.135:9000"
  }
stages {

   stage('Maven Build') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean install'
        }
      }
    }
  }

    stage('Static Code Analysis - SonarQube') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn clean verify sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }
stage ('Check secrets') {
    steps {
        sh 'docker run  gesellix/trufflehog --json https://github.com/Devansh210/Jenkins-Zero-To-Hero.git > trufflehog.json'

        script {
            def jsonReport = readFile('trufflehog.json')
            
            def htmlReport = """
            <html>
            <head>
                <title>Trufflehog Scan Report</title>
            </head>
            <body>
                <h1>Trufflehog Scan Report</h1>
                <pre>${jsonReport}</pre>
            </body>
            </html>
            """
            
            writeFile file: 'scanresults/trufflehog-report.html', text: htmlReport
        }
        
        archiveArtifacts artifacts: 'scanresults/trufflehog-report.html', allowEmptyArchive: true
    }
}
   


  post {
    always {
      echo 'Pipeline execution finished.'
    }
    failure {
      echo '❌ Build failed. Check logs and scan reports.'
    }
    success {
      echo '✅ Build succeeded.'
    }
  }
}
